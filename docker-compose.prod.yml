version: '3.8'

services:
  # OMI MCP Server
  omi-mcp:
    image: omiai/mcp-server:latest
    container_name: omi-mcp-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - OMI_API_KEY=${OMI_API_KEY:-omi_mcp_demo_key_2024}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - neurohub-network

  # Nginx Reverse Proxy (optional, for SSL termination)
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - omi-mcp
    networks:
      - neurohub-network

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - neurohub-network

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - neurohub-network

networks:
  neurohub-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: