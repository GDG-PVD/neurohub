[project]
name = "omi-a2a-demo"
version = "0.1.0"
description = "OMI Multi-Agent Demo with Google A2A Protocol"
authors = [{name = "OMI Team", email = "team@omi.me"}]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}

dependencies = [
    # A2A SDK - will be added when available
    # "a2a-sdk>=1.0.0",
    
    # Web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    
    # OMI integration
    "websockets>=12.0",
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    
    # AI/ML
    "openai>=1.0.0",
    "langchain>=0.1.0",
    "tiktoken>=0.5.0",
    "numpy>=1.24.0",
    
    # Data processing
    "pandas>=2.0.0",
    "python-multipart>=0.0.6",
    
    # Async utilities
    "aiofiles>=23.0.0",
    
    # Environment
    "python-dotenv>=1.0.0",
    
    # Monitoring
    "prometheus-client>=0.18.0",
    "structlog>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-requests",
    "httpx>=0.25.0",  # For testing
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["agents", "config", "core", "demo", "integrations", "scripts"]

# [tool.uv.sources]
# a2a-sdk = { git = "https://github.com/a2aproject/a2a-python-sdk" }

[tool.ruff]
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "RET", # flake8-return
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/*" = ["T20"]  # Allow print statements in tests
"scripts/*" = ["T20"]  # Allow print statements in scripts

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"